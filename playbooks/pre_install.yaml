# playbooks/pre_install.yaml


- name: Pre-installation tasks
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  vars_files:
    - config/vars.yaml
  vars:
    become_password: "123"
  tasks:
  
    # - name: Create ansible user
    #   user:
    #     name: "{{ ansible_user }}"
    #     comment: "Ansible User"
    #     shell: /bin/bash
    #     create_home: yes
    #     state: present

    # - name: Ensure .sh files are executable
    #   file:
    #     path: "{{ item }}"
    #     mode: '0755'
    #     state: file
    #   with_fileglob:
    #     - "bash/*.sh"
    #   delegate_to: localhost

    # - name: Generate SSH key pair on Ansible server
    #   delegate_to: localhost
    #   script: bash/generate_ssh_key.sh

    # - name: Set up passwordless SSH access
    #   authorized_key:
    #     user: "{{ ansible_user }}"
    #     state: present
    #     key: "{{ lookup('file', ssh_private_key_path) }}"

    - name: Set hostname
      script:
        cmd: bash/set_hostname.sh "{{ new_hostname }}" "{{ ansible_host }}"
      vars:
        new_hostname: "{{ new_hostname_1 if inventory_hostname == 'server1' else new_hostname_2 }}"

    - name: Update /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item.ip }} {{ item.hostname }}"
      with_items: "{{ hosts_entries }}"

    - name: Stop and disable firewall
      service:
        name: "{{ firewall_service }}"
        state: stopped
        enabled: no

    - name: Disable SELinux
      script: bash/disable_selinux.sh

    - name: Install Chrony
      yum:
        name: chrony
        state: present

    - name: Configure Chrony
      script:
        cmd: bash/configure_chrony.sh "{{ chrony_server }}"

    - name: Start and enable Chrony
      service:
        name: chronyd
        state: started
        enabled: yes

    - name: Check Chrony status
      command: systemctl status chronyd
      register: chrony_status
      ignore_errors: yes

    - name: Debug Chrony status
      debug:
        var: chrony_status.stdout_lines

    - name: Check Chrony sources
      command: chronyc sources
      register: chrony_sources
      ignore_errors: yes

    - name: Debug Chrony sources
      debug:
        var: chrony_sources.stdout_lines
